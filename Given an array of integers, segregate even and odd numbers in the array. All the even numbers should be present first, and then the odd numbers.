// Example program
/*
The idea discussed in this post is based on Lomutoâ€™s Partition Scheme

Maintain a pointer to the position before first odd element in the array.
Traverse the array and if even number is encountered then swap it with the first odd element.
Continue the traversal.
*/

#include <iostream>

using namespace std;

#include <iostream>

using namespace std;
void swap(int*a,int*b)

{
 int temp=*a;
 *a=*b;
 *b=temp;
}
void segregateEvenOdd(int arr[],int n)
{
    int i=-1,j=0;
    while(j!=n)
    {
        if(arr[j]%2==0)
           {
               i++;
               swap(&arr[i],&arr[j]);
           }
           j++;
    }
}
void printArray(int arr[],int n)
{
    for(int i=0;i<n;i++)
     cout<<arr[i]<<"\t";
}

int main()
{
    int arr[] = { 1, 3, 2, 4, 7, 6, 9, 10 };  
    int n = sizeof(arr)/sizeof(arr[0]); 
    segregateEvenOdd(arr,n);
    printArray(arr,n);
    return 0;
}
